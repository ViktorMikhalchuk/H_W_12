package phonebook;

import java.util.ArrayList;
import java.util.List;

public class Application {

        public static void main(String[] args) {
            TelephoneDirectory phoneBook = new TelephoneDirectory();

            Record entry1 = new Record("Mihailo", "123-456-789");
            Record entry2 = new Record("Vitaliy", "987-654-321");
            Record entry3 = new Record("Masha", "922-654-321");

            phoneBook.add(entry1);
            phoneBook.add(entry2);
            phoneBook.add(entry3);

            Record result = phoneBook.find("Masha");
            if (result != null) {
                System.out.println("Phone number is: " + result.getPhone());
            } else {
                System.out.println("Record not found.");
            }
        }

}
//0. Створити новий пакет phonebook.
//
//1. Створити клас Телефонний довідник.
//
//2. Створити клас Запис.
//
//3. Клас Запис зберігає Ім'я та Телефон.
//
//4. Клас Телефонний Довідник зберігає безліч записів типу даних Запис.
//
//5. У класі Телефонний Довідник реалізувати метод add. Метод додає Запис до Телефонного Довідника.
//
//Примітка: Під одним прізвищем може зберігатися кілька телефонів, тому можлива наявність декількох записів.
//
//6. У класі Телефонний Довідник реалізувати метод find(). Метод здійснює пошук конкретного запису на ім'я. Якщо запис знайдений (перший знайдений), тоді його необхідно повернути, інакше повертається null.
//
//7. Мається на увазі дотримання відомих (на даний момент) правил написання коду в ОВП та правил "Чистоти коду".
//
//8. * У класі Телефонний Довідник реалізувати метод findAll(). Метод здійснює пошук записів на ім'я. Якщо записи знайдені, тоді їх необхідно повернути, інакше повертається null.
//
//Така реалізація викликана тим, що під одним прізвищем може зберігатися кілька телефонів і при запиті по конкретному імені необхідно повертати всі записи, що є в наявності.



